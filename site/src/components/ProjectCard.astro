---
// src/components/ProjectCard.astro
interface Props {
  title: string;
  description: string;
  image?: string;
  tags: string[];
  githubUrl?: string;
  liveUrl?: string;
  featured?: boolean;
  category?: string; // <-- NEW
}

const {
  title,
  description,
  image = '',
  tags,
  githubUrl,
  liveUrl,
  featured = false,
  category = 'other'
} = Astro.props;

// slug for filtering (e.g. "Systems/Low-Level" -> "systems-low-level")
const catSlug = category.toLowerCase().replace(/\s+/g, '-');
const hasImage = image.trim().length > 0;

// simple "initials" for the placeholder (e.g., "PE Parser" -> "PP")
const initials = title
  .split(/\s+/)
  .map(w => w[0])
  .join('')
  .slice(0, 3)
  .toUpperCase();
---

<article
  data-category={catSlug}
  class:list={[
    'card group overflow-hidden h-full flex flex-col',
    featured && 'ring-2 ring-blue-500 dark:ring-blue-400'
  ]}
>
  <!-- Image / Placeholder -->
  <div class="relative overflow-hidden aspect-video bg-gray-100 dark:bg-gray-700">
    {featured && (
      <div class="absolute top-4 right-4 z-10">
        <span class="px-3 py-1 bg-blue-600 text-white text-xs font-semibold rounded-full">
          Featured
        </span>
      </div>
    )}

    <!-- The image -->
    <img
      src={image || ''}
      alt={title}
      class:list={[
        'w-full h-full object-cover transition-transform duration-500 group-hover:scale-110',
        !hasImage && 'hidden' // hide if no image provided at all
      ]}
      loading="lazy"
      onerror="this.classList.add('hidden'); this.nextElementSibling.classList.remove('hidden');"
      onload="this.classList.remove('hidden'); this.nextElementSibling.classList.add('hidden');"
    />

    <!-- Fallback (initially hidden when we *think* we have an image) -->
    <div class:list={[
      'fallback absolute inset-0 w-full h-full flex items-center justify-center bg-gradient-to-br from-slate-700 to-slate-800',
      hasImage ? 'hidden' : 'flex'
    ]}>
      <div class="flex items-center gap-3 text-slate-200">
        <svg class="w-6 h-6 opacity-80" viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <rect x="3" y="4" width="18" height="14" rx="2" ry="2" stroke-width="1.5"/>
          <path d="M3 10h18M8 21h8" stroke-width="1.5"/>
        </svg>
        <span class="text-xl font-semibold tracking-wide">{initials}</span>
      </div>
    </div>

    <!-- Overlay on hover -->
    <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end justify-center pb-6 gap-4">
      {githubUrl && (
        <a
          href={githubUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="px-4 py-2 bg-white text-gray-900 rounded-lg font-medium hover:bg-gray-100 transition-colors inline-flex items-center gap-2"
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
          Code
        </a>
      )}

      {liveUrl && (
        <a
          href={liveUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="px-4 py-2 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors inline-flex items-center gap-2"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
          </svg>
          Live Demo
        </a>
      )}
    </div>
  </div>

  <!-- Content -->
  <div class="p-6 flex-grow flex flex-col">
    <h3 class="text-xl font-semibold mb-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
      {title}
    </h3>

    <p class="text-gray-600 dark:text-gray-400 mb-4 flex-grow">
      {description}
    </p>

    <!-- Tags -->
    <div class="flex flex-wrap gap-2">
      {tags.map(tag => (
        <span class="px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 text-xs rounded-full">
          {tag}
        </span>
      ))}
    </div>
  </div>
</article>
